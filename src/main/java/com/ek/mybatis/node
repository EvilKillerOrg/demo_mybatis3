mybatis 让程序将主要精力放在sql上,通过mybatis提供的映射方式,自由灵活生成(半自动化,大部分需要自己编写sql)满足需要sql语句.
mybatis 可以将 preparedStatement 中的输入参数自动进行输入映射,将结果集灵活映射成java对象(输出映射)

==>
SqlMapConfig.xml全局配置文件 加载 mapper.xml映射关系文件

==>
SqlSessionFactory(会话工厂) SqlSessionFactoryBuilder 创建SqlSession 
SqlSession(会话) 操作数据库
Executor(执行器) SqlSession内部通过执行器操作数据库(两个实现:基本执行器,缓存执行器)
mappedStatement(底层封装对象) 对操作数据库存储封装,包括sql语句,输入参数,输出结果类型

==>
数据库





输入/输出参数类型: java简单类型  hashmap  pojo自定义





应用场景:
hibernate 适用于需求变化不多的中小型项目 (erp orm oa等)
mybatis 适用于需求变化多的项目 (互联网项目,京东啥的变的多)
但是 还是要以低成本作为原则来选择 就是说要根据项目组的技术能力,大家都会 不就快了





dao的开发
SqlSession在项目中应该是单例的
SqlSession最佳应用场合在方法体内,定义为局部变量使用(因为SqlSession是线程不安全的,线程不安全的都应该放在方法体内)

方式1: 原始dao开发(接口+实现类)
需要向dao实现类中注入SqlSessionFactory , 在方法体内通过SqlSessionFactory创建SqlSession

方式2: mapperd代理
需要编写mapper接口(需要遵循一些开发规范) 和mapper.xml映射文件
mybatis可以自动生成mapper接口实现类代理对象
规范:
1. 在mapper.xml中 namespace等于mapper接口的地址(全限定名)
2. mapper接口中的方法名要和mapper.xml 中的statement的id一致
3. mapper接口中的方法输入参数类型要和mapper.xml 中statement的parameterType指定的类型一致
4. mapper接口中的返回值的类型要和mapper.xml 中statement的resultType指定的类型一致